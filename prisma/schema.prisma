generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Booking {
  id           String   @id @default(uuid())
  name         String
  email        String
  date         DateTime
  time         String
  status       String   @default("pending")
  product_id   String?
  session_name String?
  heard_from   String?
  message      String?
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now()) @updatedAt

  Product Product? @relation(fields: [product_id], references: [id])
}

model Portfolio {
  id         String   @id @default(uuid())
  image_url  String   @unique
  title      String?  @default("Portfolio")
  created_at DateTime @default(now())
  updated_at DateTime @default(now()) @updatedAt
}

model Carousel {
  id           String   @id @default(uuid())
  image_url    String
  title        String?  @default("Carousel")
  displayOrder Int      @default(0)
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now()) @updatedAt
}

model Product {
  id          String   @id @default(uuid())
  title       String   @unique
  price       Float
  duration    String
  photos      String
  image_url   String
  description String?
  cta         String?  @default("Book Now")
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now()) @updatedAt

  Booking Booking[]
  Order   Order[]
}

model User {
  id               String    @id @default(uuid())
  email            String    @unique
  password         String
  name             String?
  phone            String?
  role             String    @default("user")
  resetToken       String?
  resetTokenExpiry DateTime?
  created_at       DateTime  @default(now())
  updated_at       DateTime  @default(now()) @updatedAt

  Order Order[]
}

model Order {
  id             String   @id @default(uuid())
  user_id        String
  product_id     String
  product_name   String
  status         String   @default("pending")
  date           DateTime
  time           String
  amount         Float
  currency       String
  payment_id     String
  payment_status String
  created_at     DateTime @default(now())
  updated_at     DateTime @default(now()) @updatedAt

  User    User    @relation(fields: [user_id], references: [id])
  Product Product @relation(fields: [product_id], references: [id])
}
